{"ast":null,"code":"var _jsxFileName = \"/Users/mgikanga/projects/mycontacts/src/components/contacts/Contacts.js\";\nimport React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getContacts } from \"../../actions/contactActions\";\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  render() {\n    // get the contacts as props\n    const {\n      contacts\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-4 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, \"Contact\"), \" List\"), contacts.map(contact => /*#__PURE__*/React.createElement(Contact, {\n      key: contact.id,\n      contact: contact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nContact.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contact.contacts\n});\n\nexport default connect(mapStateToProps, {\n  getContacts\n})(Contacts);","map":{"version":3,"sources":["/Users/mgikanga/projects/mycontacts/src/components/contacts/Contacts.js"],"names":["React","Component","Contact","connect","PropTypes","getContacts","Contacts","componentDidMount","props","render","contacts","map","contact","id","propTypes","array","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,8BAA5B;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC/BM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWH,WAAX;AACD;;AACDI,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKF,KAA1B;AACA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,UADF,EAIGE,QAAQ,CAACC,GAAT,CAAcC,OAAD,iBACZ,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAtB;AAA0B,MAAA,OAAO,EAAED,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJH,CADF;AAUD;;AAjB8B;;AAmBjCV,OAAO,CAACY,SAAR,GAAoB;AAClBJ,EAAAA,QAAQ,EAAEN,SAAS,CAACW,KAAV,CAAgBC,UADR;AAElBX,EAAAA,WAAW,EAAED,SAAS,CAACa,IAAV,CAAeD;AAFV,CAApB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,QAAQ,EAAES,KAAK,CAACP,OAAN,CAAcF;AADU,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACe,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,QAA1C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getContacts } from \"../../actions/contactActions\";\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n  render() {\n    // get the contacts as props\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map((contact) => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\nContact.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contact.contacts,\n});\n\nexport default connect(mapStateToProps, { getContacts })(Contacts);\n"]},"metadata":{},"sourceType":"module"}