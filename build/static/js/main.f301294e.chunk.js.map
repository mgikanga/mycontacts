{"version":3,"sources":["components/contacts/Contact.js","actions/contactActions.js","actions/types.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","registerServiceWorker.js","index.js"],"names":["Contact","state","showContactInfo","onDeleteClick","id","props","deleteContact","this","contact","name","email","phone","className","onClick","setState","style","cursor","float","color","bind","Link","to","marginRight","Component","connect","type","payload","Contacts","getContacts","contacts","Fragment","map","key","propTypes","PropTypes","array","isRequired","func","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","uuid","console","log","addContact","history","push","target","EditContact","match","params","Header","branding","href","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","Switch","Route","exact","path","component","About","NotFound","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f301294e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteContact } from \"../../actions/contactActions\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false,\n  };\n\n  onDeleteClick = (id) => {\n    this.props.deleteContact(id);\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <div className=\"card card-body mb-3\">\n        <h4>\n          {name}{\" \"}\n          <i\n            onClick={() =>\n              this.setState({\n                showContactInfo: !this.state.showContactInfo,\n              })\n            }\n            className=\"fas fa-sort-down\"\n            style={{ cursor: \"pointer\" }}\n          />\n          <i\n            className=\"fas fa-times\"\n            style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n            onClick={this.onDeleteClick.bind(this, id)}\n          />\n          <Link to={`contact/edit/${id}`}>\n            <i\n              className=\"fas fa-pencil-alt\"\n              style={{\n                cursor: \"pointer\",\n                float: \"right\",\n                color: \"black\",\n                marginRight: \"1rem\",\n              }}\n            />\n          </Link>\n        </h4>\n        {showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteContact })(Contact);\n","import { GET_CONTACTS, DELETE_CONTACT, ADD_CONTACT } from \"../actions/types\";\nimport Contact from \"../components/contacts/Contact\";\nexport const getContacts = () => {\n  return {\n    type: GET_CONTACTS,\n  };\n};\nexport const deleteContact = (id) => {\n  return {\n    type: DELETE_CONTACT,\n    payload: id,\n  };\n};\nexport const addContact = (Contact) => {\n  return {\n    type: ADD_CONTACT,\n    payload: Contact,\n  };\n};\n","export const GET_CONTACTS = \"GET_CONTACTS\";\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\nexport const ADD_CONTACT = \"ADD_CONTACT\";\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getContacts } from \"../../actions/contactActions\";\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n  render() {\n    // get the contacts as props\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map((contact) => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\nContact.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contact.contacts,\n});\n\nexport default connect(mapStateToProps, { getContacts })(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport { addContact } from \"../../actions/contactActions\";\nimport propTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport uuid from \"uuid\";\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      id: uuid(),\n      name,\n      email,\n      phone,\n    };\n    console.log(\"my ob \", newContact);\n    //SUBMIT CONTACT\n    this.props.addContact(newContact);\n\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nAddContact.propTypes = {\n  addContact: propTypes.func.isRequired,\n};\n\nexport default connect(null, { addContact })(AddContact);\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    //// UPDATE CONTACT ////\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h3 className=\"display-4\">About Contact Manager</h3>\n      <p className=\"lead\">Simple app to help you keep up with your contacts</p>\n      <p className=\"text-secondary\">Best Version on the market</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import { GET_CONTACTS, DELETE_CONTACT, ADD_CONTACT } from \"../actions/types\";\nconst initialState = {\n  contacts: [\n    {\n      id: 1,\n      name: \"John Doe\",\n      email: \"john@gmail.com\",\n      phone: \"555-555-5555\",\n    },\n    {\n      id: 2,\n      name: \"Karen Williams\",\n      email: \"karen@gmail.com\",\n      phone: \"444-444-4444\",\n    },\n    {\n      id: 3,\n      name: \"Henry Johnson\",\n      email: \"henry@gmail.com\",\n      phone: \"333-333-333\",\n    },\n  ],\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n      };\n\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport contactReducer from \"./contactReducer\";\n\nexport default combineReducers({\n  contact: contactReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nexport default store;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}